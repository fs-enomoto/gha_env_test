name: env_sample

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        options:
          - 'staging'
          - 'production'

jobs:
    sample_staging:
        runs-on: ubuntu-latest
        environment:
          name: staging
          url: https://gochikuru.stg.stafes.com/report/index.html
        steps:
          - name: Checkout
            timeout-minutes: 5
            uses: actions/checkout@v2
    
          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v1
            timeout-minutes: 5
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: ${{ vars.AWS_DEFAULT_REGION }}

          - name: Get Global IP
            id: globalip
            uses: ./.github/actions/globalip

          - name: Update ALB Listner Rule 6
            id: update-alb-listner
            env:
              ALB_LISTNER_RULE_ARN: ${{ vars.ALB_LISTNER_RULE_ARN }}
              GLOBAL_IP: ${{ steps.globalip.outputs.global_ip }}
            run: |
                echo ${ALB_LISTNER_RULE_ARN}
                echo ${GLOBAL_IP}
                echo aws elbv2 describe-rules --rule-arns ${ALB_LISTNER_RULE_ARN} 
                aws elbv2 describe-rules --rule-arns ${ALB_LISTNER_RULE_ARN} | jq -r '.Rules[0].Conditions' > /tmp/current_rule.json
                NEW_RULE=$(jq --arg ip "${GLOBAL_IP}/32" '.' |= if .Field == "source-ip" then .SourceIpConfig.Values = [$ip] else . end' /tmp/current_rule.json)
                echo aws elbv2 modify-rule --rule-arn ${ALB_LISTNER_RULE_ARN} --conditions "${NEW_RULE}"
                aws elbv2 modify-rule --rule-arn ${ALB_LISTNER_RULE_ARN} --conditions "${NEW_RULE}"

          - name: build
            id: build
            run: |
                echo "build"

          - name: S3 
            timeout-minutes: 5
            env: 
              S3_BUCKET_NAME: ${{ vars.S3_BUCKET_NAME }}
            run: |
              aws s3 ls s3://${S3_BUCKET_NAME}/report/

        #   - name: remove ALB Listner Rule
        #     if: always()
        #     run:  |
        #         aws elbv2 describe-rules --rule-arns ${ALB_LISTNER_RULE_ARN} > /tmp/current_rule.json
        #         NEW_RULE=$(jq --arg ip "192.168.1.1/32" '.Rules[0].Conditions[] |= if .Field == "source-ip" then .Values = [$ip] else . end' /tmp/current_rule.json)
        #         aws elbv2 modify-rule --rule-arn ${LISTNER_RULE_ARN} --conditions "${NEW_RULE}"
